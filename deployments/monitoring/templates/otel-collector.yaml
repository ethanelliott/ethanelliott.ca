{{- if .Values.opentelemetryCollector.enabled }}
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
  namespace: {{ .Release.Namespace }}
spec:
  config: |
    receivers:
      # OTLP receiver for applications to send telemetry
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      
      # Prometheus receiver to scrape metrics
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 30s
              static_configs:
                - targets: ['0.0.0.0:8888']
      
      # K8s cluster receiver for cluster metrics
      k8s_cluster:
        collection_interval: 30s
      
      # K8s events receiver
      k8s_events:
      
      # Host metrics receiver (when running as DaemonSet)
      hostmetrics:
        collection_interval: 30s
        scrapers:
          cpu: {}
          disk: {}
          filesystem: {}
          memory: {}
          network: {}
          process: {}

    processors:
      # Batch processor to improve performance
      batch:
        timeout: 1s
        send_batch_size: 1024
      
      # Memory limiter to prevent OOM
      memory_limiter:
        limit_mib: 256
      
      # Resource processor to add resource attributes
      resource:
        attributes:
          - key: deployment.environment
            value: home-lab
            action: upsert
          - key: service.namespace
            from_attribute: k8s.namespace.name
            action: upsert
      
      # K8s attributes processor
      k8sattributes:
        extract:
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time
        pod_association:
          - sources:
            - from: resource_attribute
              name: k8s.pod.ip
          - sources:
            - from: resource_attribute
              name: k8s.pod.uid
          - sources:
            - from: connection

    exporters:
      # Prometheus exporter for metrics
      prometheus:
        endpoint: "0.0.0.0:8889"
        resource_to_telemetry_conversion:
          enabled: true
      
      # Jaeger exporter for traces
      jaeger:
        endpoint: monitoring-jaeger-collector:14250
        tls:
          insecure: true
      
      # OTLP exporter for Jaeger (alternative)
      otlp/jaeger:
        endpoint: http://monitoring-jaeger-collector:4317
        tls:
          insecure: true
      
      # Logging exporter for debugging
      logging:
        loglevel: info
      
      # Loki exporter for logs (we'll add this later if needed)
      # loki:
      #   endpoint: http://loki:3100/loki/api/v1/push

    service:
      extensions: []
      pipelines:
        # Metrics pipeline
        metrics:
          receivers: [otlp, prometheus, k8s_cluster, hostmetrics]
          processors: [memory_limiter, k8sattributes, resource, batch]
          exporters: [prometheus, logging]
        
        # Traces pipeline  
        traces:
          receivers: [otlp]
          processors: [memory_limiter, k8sattributes, resource, batch]
          exporters: [jaeger, logging]
        
        # Logs pipeline
        logs:
          receivers: [otlp, k8s_events]
          processors: [memory_limiter, k8sattributes, resource, batch]
          exporters: [logging]
      
      # Telemetry configuration
      telemetry:
        logs:
          level: "info"
        metrics:
          address: 0.0.0.0:8888

  # Deployment configuration
  replicas: 1
  
  # Resource limits for small cluster
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

  # Ports configuration
  ports:
    - name: otlp-grpc
      port: 4317
      protocol: TCP
    - name: otlp-http
      port: 4318
      protocol: TCP
    - name: metrics
      port: 8888
      protocol: TCP
    - name: prom-metrics
      port: 8889
      protocol: TCP

  # Service configuration for external access
  service:
    type: ClusterIP

{{- end }}
