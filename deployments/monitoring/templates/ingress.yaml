{{- if .Values.ingress.grafana.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "monitoring.fullname" . }}-grafana
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "monitoring.labels" . | nindent 4 }}
    app.kubernetes.io/component: grafana-ingress
  {{- with .Values.ingress.grafana.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.grafana.className }}
  ingressClassName: {{ .Values.ingress.grafana.className }}
  {{- end }}
  {{- if and .Values.ingress.grafana.tls .Values.ingress.grafana.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.ingress.grafana.hostname }}
      secretName: {{ .Values.ingress.grafana.tls.secretName }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.grafana.hostname }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-kube-prometheus-stack-grafana
                port:
                  number: 80
{{- end }}

---

{{- if .Values.ingress.jaeger.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "monitoring.fullname" . }}-jaeger
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "monitoring.labels" . | nindent 4 }}
    app.kubernetes.io/component: jaeger-ingress
  {{- with .Values.ingress.jaeger.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.jaeger.className }}
  ingressClassName: {{ .Values.ingress.jaeger.className }}
  {{- end }}
  {{- if and .Values.ingress.jaeger.tls .Values.ingress.jaeger.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.ingress.jaeger.hostname }}
      secretName: {{ .Values.ingress.jaeger.tls.secretName }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.jaeger.hostname }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-jaeger-query
                port:
                  number: 16686
{{- end }}

---

{{- if .Values.ingress.otelCollector.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "monitoring.fullname" . }}-otel-collector
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "monitoring.labels" . | nindent 4 }}
    app.kubernetes.io/component: otel-collector-ingress
  {{- with .Values.ingress.otelCollector.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.otelCollector.className }}
  ingressClassName: {{ .Values.ingress.otelCollector.className }}
  {{- end }}
  {{- if and .Values.ingress.otelCollector.tls .Values.ingress.otelCollector.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.ingress.otelCollector.hostname }}
      secretName: {{ .Values.ingress.otelCollector.tls.secretName }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.otelCollector.hostname }}
      http:
        paths:
          - path: /v1/traces
            pathType: Prefix
            backend:
              service:
                name: otel-collector
                port:
                  number: 4318
          - path: /v1/metrics
            pathType: Prefix
            backend:
              service:
                name: otel-collector
                port:
                  number: 4318
          - path: /v1/logs
            pathType: Prefix
            backend:
              service:
                name: otel-collector
                port:
                  number: 4318
{{- end }}

---

{{- if .Values.ingress.prometheus.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "monitoring.fullname" . }}-prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "monitoring.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus-ingress
  {{- with .Values.ingress.prometheus.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.prometheus.className }}
  ingressClassName: {{ .Values.ingress.prometheus.className }}
  {{- end }}
  {{- if and .Values.ingress.prometheus.tls .Values.ingress.prometheus.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.ingress.prometheus.hostname }}
      secretName: {{ .Values.ingress.prometheus.tls.secretName }}
  {{- end }}
  rules:
    - host: {{ .Values.ingress.prometheus.hostname }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-kube-prometheus-stack-prometheus
                port:
                  number: 9090
{{- end }}
